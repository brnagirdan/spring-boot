resource_types:
- name: artifactory-resource
  type: docker-image
  source:
    repository: springio/artifactory-resource
    tag: 0.0.1-SNAPSHOT
- name: email
  type: docker-image
  source:
    repository: pcfseceng/email-resource
resources:
- name: git-repo
  type: git
  source:
    uri: https://github.com/philwebb/spring-boot.git
    username: ((github-username))
    password: ((github-password))
    branch: maven-restruct
    ignore_paths: ["ci/images/*"]
- name: ci-images-git-repo
  type: git
  source:
    uri: https://github.com/philwebb/spring-boot.git
    branch: maven-restruct
    paths: ["ci/images/*"]
- name: build-info-git-repo
  type: git
  source:
    uri: https://github.com/philwebb/spring-boot.git
    branch: build
- name: spring-boot-ci-image
  type: docker-image
  source:
    repository: springci/spring-boot-ci-image
    username: ((docker-hub-username))
    password: ((docker-hub-password))
    tag: master
- name: artifactory-repo
  type: artifactory-resource
  source:
    uri: https://pwebb3.jfrog.io/pwebb3
    username: ((artifactory-username))
    password: ((artifactory-password))
    build_name: "Spring Boot - 2.0.x"
- name: email-notification
  type: email
  source:
    smtp:
      host: smtp.svc.pivotal.io
      port: "25"
      anonymous: true
      skip_ssl_validation: true
    from: "ci@spring.io"
jobs:
- name: build-spring-boot-ci-image
  plan:
  - get: ci-images-git-repo
    trigger: true
  - put: spring-boot-ci-image
    params:
      build: ci-images-git-repo/ci/images/spring-boot-ci-image
- name: build
  plan:
  - get: git-repo
    trigger: true
  - get: build-info-git-repo
  - task: build-project
    file: git-repo/ci/tasks/build-project.yml
  - aggregate:
    - task: build-sample-tests
      file: git-repo/ci/tasks/build-sample-tests.yml
    - task: build-integration-tests
      file: git-repo/ci/tasks/build-integration-tests.yml
    - task: build-deployment-tests
      file: git-repo/ci/tasks/build-deployment-tests.yml
  - put: artifactory-repo
    params:
      repo: libs-snapshot-local
      build_number: "${BUILD_ID}"
      folder: distribution-repository
      build_uri: "https://ci.spring.io/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}"
      build_number: "${BUILD_NAME}"
      artifact_set:
      - include:
        - "/**/spring-boot-docs-*.zip"
        properties:
          zip-type: "docs"
          zip-deployed: "false"
  - put: build-info-git-repo
  on_success:
    task: handle-build-success
    file: git-repo/ci/tasks/handle-build-success.yml
  on_failure:
    task: handle-build-failure
    file: git-repo/ci/tasks/handle-build-failure.yml
- name: notify
  plan:
  - put: email-notification
    params:
      subject_text: "Build finished: ${BUILD_PIPELINE_NAME}/${BUILD_JOB_NAME}/${BUILD_NAME}"
      body_text: "Build finished: ${ATC_EXTERNAL_URL}/teams/main/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}"
groups:
- name: "Spring Boot"
  jobs: ["build"]
- name: "CI Images"
  jobs: ["build-spring-boot-ci-image"]
- name: "Notify"
  jobs: ["notify"]