<?xml version="1.0"?>
<!DOCTYPE module PUBLIC "-//Puppy Crawl//DTD Check Configuration 1.2//EN" "http://www.puppycrawl.com/dtds/configuration_1_2.dtd">
<module name="Checker">
	<module name="RegexpHeader">
		<property name="headerFile" value="${checkstyle.header.file}"/>
		<property name="fileExtensions" value="java"/>
	</module>
	<module name="TreeWalker">
		<module name="AnnotationUseStyle">
			<property name="elementStyle" value="compact" />
		</module>
		<module name="MissingOverride" />
		<module name="PackageAnnotation" />
		<module name="AnnotationLocation">
			<property name="allowSamelineSingleParameterlessAnnotation"
				value="false" />
		</module>

		<module name="EmptyBlock">
			<property name="option" value="text" />
		</module>
		<module name="LeftCurly" />
		<module name="RightCurly">
			<property name="option" value="alone" />
		</module>
		<module name="NeedBraces" />
		<module name="AvoidNestedBlocks" />

		<module name="FinalClass" />
		<module name="InterfaceIsType" />
		<module name="HideUtilityClassConstructor" />
		<module name="MutableException" />
		<module name="InnerTypeLast" />
		<module name="OneTopLevelClass" />

		<module name="CovariantEquals" />
		<module name="EmptyStatement" />
		<module name="EqualsHashCode" />
		<module name="InnerAssignment" />
		<module name="SimplifyBooleanExpression" />
		<module name="SimplifyBooleanReturn" />
		<module name="StringLiteralEquality" />
		<module name="NestedForDepth">
    		<property name="max" value="3"/>
		</module>
		<module name="NestedIfDepth">
    		<property name="max" value="3"/>
		</module>
		<module name="NestedTryDepth">
    		<property name="max" value="3"/>
		</module>
		<module name="MultipleVariableDeclarations" />
		<module name="RequireThis">
			<property name="checkMethods" value="false" />
		</module>
		<module name="OneStatementPerLine" />

		<module name="AvoidStarImport" />
		<module name="AvoidStaticImport">
			<property name="excludes" value="org.junit.Assert.*, org.junit.Assume.*, org.junit.internal.matchers.ThrowableMessageMatcher.*, org.hamcrest.CoreMatchers.*, org.hamcrest.Matchers.*, org.springframework.boot.configurationprocessor.ConfigurationMetadataMatchers.*, org.springframework.boot.configurationprocessor.TestCompiler.*, org.mockito.Mockito.*, org.mockito.BDDMockito.*, org.mockito.Matchers.*, org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*, org.springframework.test.web.servlet.result.MockMvcResultMatchers.*, org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestPostProcessors.*, org.springframework.security.test.web.servlet.setup.SecurityMockMvcConfigurers.*, org.springframework.hateoas.mvc.ControllerLinkBuilder.linkTo" />
		</module>


		<module name="RedundantImport" />
		<module name="UnusedImports">
			<property name="processJavadoc" value="true" />
		</module>
		<module name="StringLiteralEquality" />
		<module name="MultipleVariableDeclarations" />
		<module name="NeedBraces" />
		<module name="OneTopLevelClass" />
		<module name="RegexpSinglelineJava">
			<property name="format" value="^\t* +\t*\S" />
			<property name="message"
				value="Line has leading space characters; indentation should be performed with tabs only." />
			<property name="ignoreComments" value="true" />
		</module>
	</module>
</module>
