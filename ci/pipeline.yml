# fly -t spring set-pipeline -p spring-boot -c ci/pipeline.yml -l ci/parameters.yml -l ci/secrets.yml

resource_types:
- name: artifactory-resource
  type: docker-image
  source:
    repository: springio/artifactory-resource
    tag: 0.0.1-SNAPSHOT
- name: email
  type: docker-image
  source:
    repository: pcfseceng/email-resource
resources:
- name: git-repo
  type: git
  source:
    uri: ((github-repo))
    username: ((github-username))
    password: ((github-password))
    branch: ((branch))
    ignore_paths: ["ci/images/*"]
- name: ci-images-git-repo
  type: git
  source:
    uri: ((github-repo))
    branch: ((branch))
    paths: ["ci/images/*"]
- name: spring-boot-ci-image
  type: docker-image
  source:
    repository: ((docker-hub-repo))
    username: ((docker-hub-username))
    password: ((docker-hub-password))
    tag: ((branch))
- name: artifactory-repo
  type: artifactory-resource
  source:
    uri: ((artifactory-server))
    username: ((artifactory-username))
    password: ((artifactory-password))
    build_name: ((build-name))
- name: email-notification
  type: email
  source:
    smtp:
      host: smtp.svc.pivotal.io
      port: "25"
      anonymous: true
      skip_ssl_validation: true
    to: ["pwebb@pivotal.io"]
    from: "ci@spring.io"
jobs:
- name: build-spring-boot-ci-image
  plan:
  - get: ci-images-git-repo
    trigger: true
  - put: spring-boot-ci-image
    params:
      build: ci-images-git-repo/ci/images/spring-boot-ci-image
- name: build
  plan:
  - get: git-repo
    trigger: true
  - do:
    - task: build-project
      file: git-repo/ci/tasks/build-project.yml
    - aggregate:
      - task: build-sample-tests
        file: git-repo/ci/tasks/build-sample-tests.yml
      - task: build-integration-tests
        file: git-repo/ci/tasks/build-integration-tests.yml
      - task: build-deployment-tests
        file: git-repo/ci/tasks/build-deployment-tests.yml
    on_failure:
      put: email-notification
      params:
        subject_text: "Build failure ${BUILD_PIPELINE_NAME} / ${BUILD_JOB_NAME} / ${BUILD_NAME}"
        body_text: "Build ${ATC_EXTERNAL_URL}/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME} has failed!"
  - put: artifactory-repo
    params: &artifactory-params
      repo: libs-snapshot-local
      build_number: "${BUILD_ID}"
      folder: distribution-repository
      build_uri: "https://ci.spring.io/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}"
      build_number: "${BUILD_PIPELINE_NAME}-${BUILD_JOB_NAME}-${BUILD_NAME}"
      artifact_set:
      - include:
        - "/**/spring-boot-docs-*.zip"
        properties:
          zip-type: "docs"
          zip-deployed: "false"
- name: stage-milestone
  plan:
  - get: git-repo
    trigger: false
  - task: stage
    file: git-repo/ci/tasks/stage.yml
    params:
      RELEASE_TYPE: M
  - put: artifactory-repo
    params:
      <<: *artifactory-params
      repo: libs-staging-local
  - put: git-repo
    params:
      repository: stage-git-repo
- name: stage-rc
  plan:
  - get: git-repo
    trigger: false
  - task: stage
    file: git-repo/ci/tasks/stage.yml
    params:
      RELEASE_TYPE: RC
  - put: artifactory-repo
    params:
      <<: *artifactory-params
      repo: libs-staging-local
  - put: git-repo
    params:
      repository: stage-git-repo
- name: stage-release
  plan:
  - get: git-repo
    trigger: false
  - task: stage
    file: git-repo/ci/tasks/stage.yml
    params:
      RELEASE_TYPE: RELEASE
  - put: artifactory-repo
    params:
      <<: *artifactory-params
      repo: libs-staging-local
  - put: git-repo
    params:
      repository: stage-git-repo
- name: promote-milestone
  plan:
  - get: git-repo
    trigger: false
    passed: [stage-milestone]
  - get: artifactory-repo
    trigger: false
    passed: [stage-milestone]
    params:
      save_build_info: true
  - task: stage
    file: git-repo/ci/tasks/promote.yml
    params:
      RELEASE_TYPE: M
      ARTIFACTORY_SERVER: ((artifactory-server))
      ARTIFACTORY_USERNAME: ((artifactory-username))
      ARTIFACTORY_PASSWORD: ((artifactory-password))
- name: promote-rc
  plan:
  - get: git-repo
    trigger: false
    passed: [stage-rc]
  - get: artifactory-repo
    trigger: false
    passed: [stage-rc]
    params:
      save_build_info: true
  - task: stage
    file: git-repo/ci/tasks/promote.yml
    params:
      RELEASE_TYPE: RC
      ARTIFACTORY_SERVER: ((artifactory-server))
      ARTIFACTORY_USERNAME: ((artifactory-username))
      ARTIFACTORY_PASSWORD: ((artifactory-password))
- name: promote-release
  plan:
  - get: git-repo
    trigger: false
    passed: [stage-release]
  - get: artifactory-repo
    trigger: false
    passed: [stage-release]
    params:
      save_build_info: true
  - task: stage
    file: git-repo/ci/tasks/promote.yml
    params:
      RELEASE_TYPE: RELEASE
      ARTIFACTORY_SERVER: ((artifactory-server))
      ARTIFACTORY_USERNAME: ((artifactory-username))
      ARTIFACTORY_PASSWORD: ((artifactory-password))
groups:
- name: "Build"
  jobs: ["build"]
- name: "Release"
  jobs: ["stage-milestone", "stage-rc", "stage-release", "promote-milestone", "promote-rc", "promote-release"]
- name: "CI Images"
  jobs: ["build-spring-boot-ci-image"]
